{"version":3,"sources":["../../assets_src/js/be/code.js","../../assets_src/js/be/fragments.js","../../assets_src/js/be/scripts.js"],"names":["bloecks_code","init","insertLinebreakAtCursor","el","range","val","value","selectionStart","selectionEnd","before","slice","matches","match","console","log","this","insertTextAtCursor","document","selection","createRange","focus","collapse","select","jumpToPreviousTab","text","endIndex","length","$","on","proxy","bloecks_fragments","addToggleButtons","change.bloecks","e","toggle","is","id","attr","removeClass","addClass","each","i","bloecks","plugins","getPlugins","plugins_length","getSliceId","parents","first","find","parseInt","replace","executePjax","url","pjax","container","fragment","push","initializable","filter","addPlugin","name","object","priority","Math","max","isNaN","concat","Array","apply","splice"],"mappings":"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","file":"be.js","sourcesContent":["var bloecks_code = {\n    init : function()\n    {\n        return; \n        console.log('code');\n        $(document).on({\n            'keydown.bloecks' : function(e)\n            {\n                console.log(e);\n                console.log('Key pressed ' + e.keyCode + ' (and SHIFT is ' + (e.shiftKey === true ? '' : 'not ') + 'pressed');\n                switch(e.keyCode)\n                {\n                    case 9 :\n                        if(e.shiftKey)\n                        {\n                            bloecks_code.jumpToPreviousTab(this);\n                        }\n                        else\n                        {\n                            bloecks_code.insertTextAtCursor(this, \"\\t\");\n                        }\n                        return false;\n                        break;\n                    case 13 :\n                        return bloecks_code.insertLinebreakAtCursor(this);\n                        break;\n                }\n            }\n        }, 'textarea.bloecks--code');\n    },\n\n    insertLinebreakAtCursor : function (el) {\n        var val = el.value, endIndex, range;\n        if (typeof el.selectionStart != \"undefined\" && typeof el.selectionEnd != \"undefined\")\n        {\n            before = val.slice(0, el.selectionStart);\n            matches = before.match(/(\\n|^)(\\t+|\\s+)?[^\\n]+$/);\n            console.log(matches);\n            if(matches && typeof(matches[2]) != 'undefined')\n            {\n                this.insertTextAtCursor(el, \"\\n\" + matches[2]);\n                return false;\n            }\n        }\n        else if (typeof document.selection != \"undefined\" && typeof document.selection.createRange != \"undefined\")\n        {\n            el.focus();\n            range = document.selection.createRange();\n            range.collapse(false);\n            console.log(\"RANGE\");\n            console.log(range);\n            range.select();\n        }\n\n        return true;\n    },\n\n    jumpToPreviousTab : function(el)\n    {\n        var val = el.value, endIndex, range;\n        if (typeof el.selectionStart != \"undefined\" && typeof el.selectionEnd != \"undefined\")\n        {\n            before = val.slice(0, el.selectionStart);\n\n            matches = before.match(/(\\n|^)(.*)[^\\n]+$/);\n            console.log(matches);\n        }\n        else if (typeof document.selection != \"undefined\" && typeof document.selection.createRange != \"undefined\")\n        {\n            el.focus();\n            range = document.selection.createRange();\n            range.collapse(false);\n            console.log(\"RANGE\");\n            console.log(range);\n            range.select();\n        }\n    },\n\n    insertTextAtCursor : function (el, text) {\n        var val = el.value, endIndex, range;\n        if (typeof el.selectionStart != \"undefined\" && typeof el.selectionEnd != \"undefined\")\n        {\n            endIndex = el.selectionEnd;\n            el.value = val.slice(0, el.selectionStart) + text + val.slice(endIndex);\n            el.selectionStart = el.selectionEnd = endIndex + text.length;\n        }\n        else if (typeof document.selection != \"undefined\" && typeof document.selection.createRange != \"undefined\")\n        {\n            el.focus();\n            range = document.selection.createRange();\n            range.collapse(false);\n            range.text = text;\n            range.select();\n        }\n    }\n}\n\n$(document).on('ready.bloecks', $.proxy(bloecks_code.init, bloecks_code));\n","var bloecks_fragments = {\n    init : function()\n    {\n        console.log('fragments');\n        this.addToggleButtons();\n    },\n\n    addToggleButtons : function()\n    {\n        $(document).on({\n            'change.bloecks' : function(e)\n            {\n                bloecks_fragments.toggle(this);\n            }\n        }, '.bloecks--setting input[type=\"checkbox\"][name*=\"[active]\"]');\n    },\n\n    toggle : function(el)\n    {\n        var on = $(el).is(':checked'),\n            id = $(el).attr('id');\n\n        if(on)\n        {\n            $('.' + id).removeClass('is--hidden');\n        }\n        else\n        {\n            $('.' + id).addClass('is--hidden');\n        }\n    }\n}\n\n$(document).on('ready.bloecks', $.proxy(bloecks_fragments.init, bloecks_fragments));\n$(document).on('rex:ready', function(e){\n    $('.bloecks--setting input[type=\"checkbox\"][name*=\"[active]\"]').each(function(i, el){\n        bloecks_fragments.toggle(el);\n    });\n});\n","var bloecks = {\n\n    plugins : [],\n\n    init : function()\n    {\n        // get clean plugins list\n        var plugins = this.getPlugins(true),\n            plugins_length = plugins.length;\n\n        for(var i = 0; i < plugins_length; i++)\n        {\n            // for each plugin - execute init routine\n            this[plugins[i]].init();\n        }\n    },\n\n    getSliceId : function(slice)\n    {\n        var id = null;\n\n        if(!$(slice).is('.rex-slice-output'))\n        {\n            if($(slice).parents('.rex-slice-output').length)\n            {\n                slice = $(slice).parents('.rex-slice-output').first();\n            }\n            else if($(slice).find('.rex-slice-output').length == 1)\n            {\n                slice = $(slice).find('.rex-slice-output').first();\n            }\n            else\n            {\n                slice = null;\n            }\n        }\n\n        if(slice)\n        {\n            if($(slice).find('[href*=\"slice_id=\"]').length)\n            {\n                id = parseInt($(slice).find('[href*=\"slice_id=\"]').first().attr('href').replace(/.*slice_id=(\\d+).*/,'$1'));\n            }\n            else if($(slice).attr('id'))\n            {\n                id = parseInt($(slice).attr('id').replace(/[^0-9]/g, ''))\n            }\n        }\n\n        return id;\n    },\n\n    executePjax : function(url)\n    {\n        var matches = url.match(/(#[^\\?\\&]+)/);\n        if(matches)\n        {\n            url = url.replace(/(#[^\\?\\&]+)/, '') + matches[0];\n        }\n        console.log('PJAXing ' + url);\n\n        $.pjax(\n        {\n            url: url,\n            container: '#rex-js-page-main-content',\n            fragment : '#rex-js-page-main-content',\n            push : false\n        });\n    },\n\n    getPlugins : function(initializable)\n    {\n        initializable = initializable === true;\n        return this.plugins.filter(function(value){\n            // a plugin name is only valid if it's (a) a string, (b) a method exists in main js object and (c) if it contains an init() routine\n            return typeof(value) == 'string' && typeof(bloecks[value]) != 'undefined' && (!initializable || typeof(bloecks[value].init) == 'function');\n        });\n\n    },\n\n    addPlugin : function(name, object, priority)\n    {\n        this[name] = object; // add plugin object to main object\n\n        // get valid priority\n        priority = parseInt(priority);\n        priority = Math.max(isNaN(priority) ? 0 : priority, this.plugins.length);\n\n        // fill up plugins array if priority is greater than plugins array length\n        if(priority > this.plugins.length)\n        {\n            this.plugins = this.plugins.concat(Array.apply(null, Array(priority - this.plugins.length)));\n        }\n\n        // add plugin name to plugins array\n        this.plugins.splice(priority, 0, name);\n    }\n}\n\n$(document).on('rex:ready', $.proxy(bloecks.init, bloecks));\n"]}