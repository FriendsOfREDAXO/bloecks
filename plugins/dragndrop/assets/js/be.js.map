{"version":3,"sources":["../../assets_src/js/be/scripts.js"],"names":["bloecks","addPlugin","init","_this","this","$","each","i","slicewrapper","sortable","ev","find","length","addClass","addSortables","markDisabledItems","disabledClass","j","slice","appendTo","document","body","handle","placeholder","cancel","items","start","event","ui","css","height","item","outerHeight","width","outerWidth","stop","hasClass","removeClass","update","direction","position","top","originalPosition","this_id","getSliceId","prev_id","prevAll","first","console","log","url","attr","replace","window","location","href","executePjax"],"mappings":"AAAAA,QAAQC,UACJ,aAEIC,KAAO,WAEH,GAAIC,GAAQC,IAEZC,GAAA,qCAAuCC,KAAK,SAASC,EAAGC,GAGpD,IACIH,EAAEG,GAAcC,SAAQ,WAC1B,MAAMC,IAENL,EAAIG,GAAcG,KAAI,uDAAwDC,OAO5EP,EAAEG,GAAcK,SAAQ,eAJxBV,EAAMW,aAAaN,MAS/BO,kBAAoB,SAASP,EAAcQ,GAEvCA,EAAyC,gBAAnB,GAA8B,oBAAsBA,EAE1EX,EAAEG,GAAcG,KAAI,0BAA6BK,EAAgB,KAAKV,KAAK,SAASW,EAAGC,GAEjFb,EAAIa,GAAOP,KAAI,4BAA6BC,QAG1CP,EAAEa,GAAOL,SAASG,MAK9BF,aAAe,SAASN,GAEpB,GAAIQ,GAAgB,mBAEpBZ,MAAKW,kBAAkBP,EAAcQ,GAErCX,EAAEG,GAAcC,UACZU,SAAUC,SAASC,KACnBC,OAAQ,iBACRC,YAAa,kCACbC,OAAQR,EAERS,MAAO,kCAEPC,MAAQ,SAASC,EAAOC,GAEpBvB,EAAED,MAAMS,SAAQ,oBAEhBe,EAAGL,YAAYM,KACXC,OAASF,EAAGG,KAAKC,cACjBC,MAAQL,EAAGG,KAAKG,aAAe,KAIvCC,KAAO,SAASR,EAAOC,GAEjBvB,EAAID,MAAMgC,SAAQ,qBAEhB/B,EAAED,MAAMiC,YAAW,qBAI3BC,OAAS,SAASX,EAAOC,GAErBvB,EAAED,MAAMS,SAAQ,mBAEhB,IAAI0B,GAAYX,EAAGY,SAASC,IAAMb,EAAGc,iBAAiBD,IAAM,KAAO,OAE/DE,EAAU3C,QAAQ4C,WAAWhB,EAAGG,MAChCc,EAAUjB,EAAGG,KAAKe,QAAO,wBAAyBlC,OAASZ,QAAQ4C,WAAWhB,EAAGG,KAAKe,QAAO,wBAAyBC,SAAW,CAErI,IAAe,OAAZJ,GAAgC,OAAZE,EACvB,CACIG,QAAQC,IAAG,QAAWN,EAAU,IAAMJ,EAAY,WAAaM,EAE/D,IAAIK,GAAMtB,EAAGG,KAAKpB,KAAI,yBAA4B4B,EAAY,MAAM3B,OAASgB,EAAGG,KAAKpB,KAAI,yBAA4B4B,EAAY,MAAMQ,QAAQI,KAAI,QAAW,IACnJ,QAARD,GAECA,EAAMA,EAAIE,QAAO,mCAAqC,mCAAqCP,GAC3FK,EAAMA,EAAIE,QAAO,qBAAuB,0BAIxCF,EAAMG,OAAOC,SAASC,KAG1BP,QAAQC,IAAIC,GAEZlD,QAAQwD,YAAYN","file":"be.js","sourcesContent":["bloecks.addPlugin(\n    'dragndrop',\n    {\n        init : function()\n        {\n            var _this = this;\n            // for each rex-slices container\n            $('.rex-slices:not(.is--undraggable)').each(function(i, slicewrapper)\n            {\n                // remove any sortable\n                try {\n                    $(slicewrapper).sortable('destroy');\n                } catch(ev) { }\n\n                if(!$(slicewrapper).find('.rex-slice.rex-slice-edit, .rex-slice.rex-slice-add').length)\n                {\n                    // only add sortables if the page is not in EDIT mode\n                    _this.addSortables(slicewrapper);\n                }\n                else\n                {\n                    $(slicewrapper).addClass('is--editing');\n                }\n            });\n        },\n\n        markDisabledItems : function(slicewrapper, disabledClass)\n        {\n            disabledClass = typeof(disabledClass) != 'string' ? 'ui-state-disabled' : disabledClass;\n\n            $(slicewrapper).find('.rex-slice-output:not(.' + disabledClass + ')').each(function(j, slice)\n            {\n                if(!$(slice).find('[href*=\"direction=move\"]').length)\n                {\n                    // we won't let the user move items that cannot be moved by perms etc.\n                    $(slice).addClass(disabledClass);\n                }\n            });\n        },\n\n        addSortables : function(slicewrapper)\n        {\n            var disabledClass = 'ui-state-disabled';\n\n            this.markDisabledItems(slicewrapper, disabledClass);\n\n            $(slicewrapper).sortable({\n                appendTo: document.body,\n                handle: '.panel-heading',\n                placeholder: 'rex-slice rex-slice-placeholder',\n                cancel: disabledClass,\n                // containment: $(slicewrapper),\n                items: '>.rex-slice.rex-slice-draggable',\n\n                start : function(event, ui)\n                {\n                    $(this).addClass('ui-state-sorting');\n\n                    ui.placeholder.css({\n                        height : ui.item.outerHeight(),\n                        width : ui.item.outerWidth() - 1\n                    });\n                },\n\n                stop : function(event, ui)\n                {\n                    if(!$(this).hasClass('ui-state-updated'))\n                    {\n                        $(this).removeClass('ui-state-sorting');\n                    }\n                },\n\n                update : function(event, ui)\n                {\n                    $(this).addClass('ui-state-updated');\n\n                    var direction = ui.position.top < ui.originalPosition.top ? 'up' : 'down';\n\n                    var this_id = bloecks.getSliceId(ui.item),\n                        prev_id = ui.item.prevAll('.rex-slice-draggable').length ? bloecks.getSliceId(ui.item.prevAll('.rex-slice-draggable').first()) : 0;\n\n                    if(this_id !== null && prev_id !== null)\n                    {\n                        console.log('Move ' + this_id + ' ' + direction + ', after ' + prev_id);\n\n                        var url = ui.item.find('[href*=\"direction=move' + direction + '\"]').length ? ui.item.find('[href*=\"direction=move' + direction + '\"]').first().attr('href') : null;\n                        if(url !== null)\n                        {\n                            url = url.replace(/(&amp;|&)direction=move(up|down)/, \"$1direction=move$2$1insertafter=\" + prev_id);\n                            url = url.replace(/content_move_slice/, \"content_move_slice_to\");\n                        }\n                        else\n                        {\n                            url = window.location.href;\n                        }\n\n                        console.log(url);\n\n                        bloecks.executePjax(url);\n                    }\n                }\n            });\n        },\n    }\n);\n"]}